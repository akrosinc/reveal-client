---
name: step1_calcExistingNets
description: Number of existinf nets needed
priority: 1
condition: "true"
actions:
- "calculation = helper.ifNull(step1_existingLLINs + step1_existingHLINs + step1_existingITNs,0)"
---
name: step1_calcNumNetsNeeded
description: Number of nets needed
priority: 1
condition: "true"
actions:
- "calculation =  Math.ceil(helper.ifNull(step1_totPopulation,0)/2.0)"
---
name: step1_calcTotalNetsDistributed
description: The total number of nets distributed
priority: 1
condition: "true"
actions:
- "calculation = helper.ifNull(step1_distributedITNs + step1_distributedLLINs + step1_distributedHLINs,0)"
---
name: step1_displayRecommendedNumNets
description: Display Calculated number of nets needed
priority: 1
condition: "true"
actions:
- "calculation = ['calcNumNetsNeeded' : step1_calcNumNetsNeeded]"
---
name: step1_displayCalcExistingNets
description: Display Calculated number of nets needed
priority: 1
condition: "true"
actions:
- "calculation = ['calcExistingNets' : step1_calcExistingNets]"
---
name: step1_calcNumNetsToRedip
description: Display Calculated number of nets eligible for dipping
priority: 1
condition: "true"
actions:
- "calculation = helper.ifNull(step1_existingLLINsGreaterThan3yr + step1_existingHLINsGreaterThan3yr + step1_existingITNs - step1_existingITNDipped,0)"
---
name: step1_displayNumNetsToRedip
description: Display Number of nets eligible for redipping
priority: 1
condition: "true"
actions:
- "calculation = ['calcNumNetsToRedip' : step1_calcNumNetsToRedip]"
---
name: step1_calcPopulationMinusExistingNets
description: Population minus existing notes
priority: 1
condition: "true"
actions:
- "calculation = helper.ifNull(step1_totPopulation-step1_calcExistingNets,0)"